# -*- mode: ruby -*-
# vi: set ft=ruby :

# Assumes a box from https://github.com/jayjanssen/packer-percona

# This sets up 3 nodes with a common PXC, but you need to run bootstrap.sh to connect them.

require './lib/vagrant-common.rb'

# Our puppet config
puppet_config = {
	'innodb_buffer_pool_size' 	=> '128M',
	'innodb_log_file_size' 		=> '64M',
        "experimental_repo"             => "no",
        "percona_server_version"        => "55"
}

# Node names and ips (for local VMs)
# Security groups are 'default' (22 open) and 'pxc' (3306, 4567-4568,4444 open) for each respective region
pxc_nodes = {
	'node1' => {
	   'aws_region' => 'us-east-1',
	   'local_vm_ip' => '192.168.70.2',
	   'security_groups' => ['default','pxc']
	},
	'node2' => {
	   'aws_region' => 'us-west-1',
	   'local_vm_ip' => '192.168.70.3',
      'security_groups' => ['default','pxc']
      
	},
	'node3' => {
	   'aws_region' => 'eu-west-1',
	   'local_vm_ip' => '192.168.70.4',
      'security_groups' => ['default','pxc']
	}
}

Vagrant.configure("2") do |config|
	config.vm.box = "centos-6_4-64_percona"
	config.ssh.username = "root"

	# Create all three nodes identically except for name and ip
	pxc_nodes.each_pair { |node, node_params|
		config.vm.define node do |node_config|
			node_config.vm.hostname = node
			node_config.vm.network :private_network, ip: node_params['local_vm_ip']

			provider_aws( node_config, "PXC #{node}", 'm1.small', node_params['aws_region'], node_params['security_groups'] ) { |aws, override|
				aws.block_device_mapping = [
					{
						'DeviceName' => "/dev/sdb",
						'VirtualName' => "ephemeral0"
					}
				]
				provision_puppet( override, 'pxc.pp', 
					puppet_config.merge( 'datadir_dev' => 'xvdb' )
				)
			}

			provider_virtualbox( node_config, '256' ) { |vb, override|		
				provision_puppet( override, 'pxc.pp', 
					puppet_config.merge('datadir_dev' => 'dm-2')
				)

			}

		end
	}
end

