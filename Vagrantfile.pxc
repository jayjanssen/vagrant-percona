# -*- mode: ruby -*-
# vi: set ft=ruby :

# Assumes a box from https://github.com/jayjanssen/packer-percona

# This sets up 3 nodes with a common PXC, but you need to run bootstrap.sh to connect them.

require './lib/vagrant-common.rb'

Vagrant.configure("2") do |config|
	config.vm.box = "centos-6_4-64_percona"
	config.ssh.username = "root"

	config.vm.define :node1 do |node1_config|
		# Every Vagrant virtual environment requires a box to build off of.
		node1_config.vm.hostname = "node1"
        node1_config.vm.network :private_network, ip: "192.168.70.2"

		node1_config.vm.provider :aws do |aws, override|
			aws_provider( aws, override, "Vagrant Node1 Percona Server" )

			# The instance_type and EBS device name seem intertwined
			aws.instance_type = "m1.small"
			puppet( override, 'pxc.pp', {
				'datadir_dev' => 'xvdb',
			    "innodb_buffer_pool_size" => "256M",
			    "innodb_log_file_size" => "64M"
			})

			aws.block_device_mapping = [
				{
					'DeviceName' => "/dev/sdb",
					'VirtualName' => "ephemeral0"
				}
			]
		end

		node1_config.vm.provider :virtualbox do |vb, override|
	        vb.customize ["modifyvm", :id, "--memory", "256", "--ioapic", "on" ]

			puppet( override, 'pxc.pp', {
				'datadir_dev' => 'dm-2',
			    "innodb_buffer_pool_size" => "256M",
			    "innodb_log_file_size" => "64M"
			})
		end	
	end

	config.vm.define :node2 do |node2_config|
		# Every Vagrant virtual environment requires a box to build off of.
		node2_config.vm.hostname = "node2"
        node2_config.vm.network :private_network, ip: "192.168.70.3"

		node2_config.vm.provider :aws do |aws, override|
			aws_provider( aws, override, "Vagrant Node2 Percona Server" )

			# The instance_type and EBS device name seem intertwined
			aws.instance_type = "m1.small"
			puppet( override, 'pxc.pp', {
				'datadir_dev' => 'xvdb',
			    "innodb_buffer_pool_size" => "256M",
			    "innodb_log_file_size" => "64M"

			})

			aws.block_device_mapping = [
				{
					'DeviceName' => "/dev/sdb",
					'VirtualName' => "ephemeral0"
				}
			]
		end

		node2_config.vm.provider :virtualbox do |vb, override|
	        vb.customize ["modifyvm", :id, "--memory", "256", "--ioapic", "on" ]

			puppet( override, 'pxc.pp', {
				'datadir_dev' => 'dm-2',
			    "innodb_buffer_pool_size" => "256M",
			    "innodb_log_file_size" => "64M"
			})
		end	
	end


	config.vm.define :node3 do |node3_config|
		# Every Vagrant virtual environment requires a box to build off of.
		node3_config.vm.hostname = "node3"
        node3_config.vm.network :private_network, ip: "192.168.70.4"

		node3_config.vm.provider :aws do |aws, override|
			aws_provider( aws, override, "Vagrant Node3 Percona Server" )

			# The instance_type and EBS device name seem intertwined
			aws.instance_type = "m1.small"
			puppet( override, 'pxc.pp', {
				'datadir_dev' => 'xvdb',
			    "innodb_buffer_pool_size" => "256M",
			    "innodb_log_file_size" => "64M"

			})

			aws.block_device_mapping = [
				{
					'DeviceName' => "/dev/sdb",
					'VirtualName' => "ephemeral0"
				}
			]
		end

		node3_config.vm.provider :virtualbox do |vb, override|
	        vb.customize ["modifyvm", :id, "--memory", "256", "--ioapic", "on" ]

			puppet( override, 'pxc.pp', {
				'datadir_dev' => 'dm-2',
			    "innodb_buffer_pool_size" => "256M",
			    "innodb_log_file_size" => "64M"
			})
		end	
	end

end

